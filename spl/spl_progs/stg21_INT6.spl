//Implementing Read System Call (INT-6)
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = 7;	//Mode Flag of current process to 7 for read sysCall
alias userSP R0;
userSP = SP;
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 13] = SP;
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 11]*512 -1;

alias physicalPageNum R1;
alias offset R2;
alias fileDescPhysicalAddr R3;
physicalPageNum = [PTBR + 2 * ((userSP - 4) / 512)];
offset = (userSP - 4) % 512;
fileDescPhysicalAddr = (physicalPageNum * 512) + offset;
alias fileDescriptor R4;
fileDescriptor = [fileDescPhysicalAddr];

if (fileDescriptor == -1) then
	alias wordAdd R5;
	wordAdd = [([PTBR + 2*((userSP - 3) / 512)] * 512) + ((userSP - 3) % 512)];
	multipush(R0, R1, R2, R3, R4, R5);
	R1 = 4;	//function number of the Terminal Read function
	R2 = [SYSTEM_STATUS_TABLE + 1];
	R3 = wordAdd;
	call MOD_4;
	multipop(R0, R1, R2, R3, R4, R5);
	alias phyAddrRetVal R6;
	phyAddrRetVal = (([PTBR + 2*((userSP - 1)/512)] * 512) + ((userSP - 1) % 512));
	[phyAddrRetVal] = 0;	//success
else
	alias phyAddrRetVal R5;
	phyAddrRetVal = ([PTBR + 2 * ((userSP - 1) / 512)] * 512) + ((userSP - 1) % 512);
	[phyAddrRetVal] = -1;
endif;

[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = 0;
SP = userSP;
ireturn;
