//loading INIT program from disk to memory
loadi(65, 7);	// load disk block 7 to memory page 65
loadi(66, 8);	// load disk block 8 to memory page 66

//loading IDLE program from disk to memory
loadi(69, 11);	// load disk block 7 to memory page 65
loadi(70, 12);	// load disk block 8 to memory page 66

//loading library from disk to memory
loadi(63,13);
loadi(64,14);

//loading int10 from disk to memory
loadi(22,35);
loadi(23,36);

//loading exhandler from disk to memory
loadi(2, 15);
loadi(3, 16);

//loding INT7 from disk to memory
loadi(16, 29);
loadi(17, 30);

//loading timer interrupt routine
loadi(4, 17);
loadi(5, 18);


PTBR = PAGE_TABLE_BASE;	//(FOR IDLE PROCESS), PID of idle process is 0
PTLR = 10;

//Library
[PTBR + 0] = -1;
[PTBR + 1] = "0000";
[PTBR + 2] = -1;
[PTBR + 3] = "0000";

//Heap
[PTBR + 4] = -1;
[PTBR + 5] = "0000";
[PTBR + 6] = -1;
[PTBR + 7] = "0000";

//Code
[PTBR + 8] = 69;
[PTBR + 9] = "0100";
[PTBR + 10] = 70;
[PTBR + 11] = "0100";
[PTBR + 12] = -1;
[PTBR + 13] = "0000";
[PTBR + 14] = -1;
[PTBR + 15] = "0000";

//Stack
[PTBR + 16] = 81;
[PTBR + 17] = "0110";
[PTBR + 18] = -1;
[PTBR + 19] = "0000";

[PROCESS_TABLE + 1] = 0;	//first PT entry, PID = 0 (for idle process)
[PROCESS_TABLE + 4] = 3;	//State Created, (for idle process)
[PROCESS_TABLE + 11] = 82;	//User Area Page Number = 82, (for idle process)
[PROCESS_TABLE + 13] = 8*512;	//UPTR = 8*512, (for idle process)
[PROCESS_TABLE + 12] = 0;	//KPTR = 0,	(for idle process)
[PROCESS_TABLE + 14] = PTBR;
[PROCESS_TABLE + 15] = PTLR;


PTBR = PAGE_TABLE_BASE + 20;	//(FOR INIT PROCESS), PID of init process is 1

//Library
[PTBR + 0] = 63;
[PTBR + 1] = "0100";
[PTBR + 2] = 64;
[PTBR + 3] = "0100";

//Heap
[PTBR + 4] = 78;
[PTBR + 5] = "0110";
[PTBR + 6] = 79;
[PTBR + 7] = "0110";

//Code
[PTBR + 8] = 65;
[PTBR + 9] = "0100";
[PTBR + 10] = 66;
[PTBR + 11] = "0100";
[PTBR + 12] = -1;
[PTBR + 13] = "0000";
[PTBR + 14] = -1;
[PTBR + 15] = "0000";

//Stack
[PTBR + 16] = 76;
[PTBR + 17] = "0110";
[PTBR + 18] = 77;
[PTBR + 19] = "0110";


[PROCESS_TABLE + 17] = 1;	//first PT entry, PID = 1 (for init process)
[PROCESS_TABLE + 20] = 2;	//State Running, (for init process)
[PROCESS_TABLE + 27] = 80;	//User Area Page Number = 80, (for init process)
[PROCESS_TABLE + 29] = 8*512;	//UPTR = 8*512, (for idle process)
[PROCESS_TABLE + 28] = 0;	//KPTR = 0,	(for idle process)
[PROCESS_TABLE + 30] = PTBR;
[PROCESS_TABLE + 31] = PTLR;


[SYSTEM_STATUS_TABLE + 1] = 1;	//points to the starting address of the System Status Table, (PID of running process)

[81*512] = [69 * 512 + 1];
[76*512] = [65 * 512 + 1];
SP = 8*512;

ireturn;	//switch to user mode 
